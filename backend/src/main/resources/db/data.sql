SET FOREIGN_KEY_CHECKS = 0;

TRUNCATE TABLE test_history;
TRUNCATE TABLE test;
TRUNCATE TABLE test_paper;
TRUNCATE TABLE work_book;
TRUNCATE TABLE user;

SET FOREIGN_KEY_CHECKS = 1;

INSERT INTO user (google_email, username, nickname)
VALUES ('4321gogo@gmail.com', 'google 10023230', '가보자고');

INSERT INTO work_book (title, user_id)
VALUES ('로컬테스트용 문제집', 1);

INSERT INTO test_paper (work_book_id, title, choice_ans, ox_ans, short_ans, word_ans, quantity)
VALUES (1, "객관식만20", 20, 0, 0, 0, 20),
       (1, "이것저것15", 5, 5, 5, 0, 15);


INSERT INTO test (test_paper_id, comment, memo, question, answer, option1, option2, option3, option4, type)
VALUES('1', '자료구조의 기본적인 연산에는 데이터를 추가하는 \'삽입\', 특정 데이터를 제거하는 \'삭제\', 해당 데이터를 찾는 \'탐색\'이 포함됩니다. \'정렬\'은 데이터를 특정 순서대로 배치하는 것으로, 기본적인 자료구조의 연산보다는 특정 알고리즘 연산에 가까워서 일반적으로 기본 연산으로 분류되지는 않습니다.', NULL, '다음 중 자료구조의 기본적인 연산에 해당하지 않는 것은?', '3', '삽입', '삭제', '정렬', '탐색', 'TYPE_CHOICE'),
('1', '운영체제의 주요 기능에는 시스템의 효율적인 동작을 위한 \'프로세스 관리\', 메모리의 효율적인 사용을 위한 \'기억장치 관리\', 사용자와 시스템 간의 상호작용을 돕기 위한 \'사용자 인터페이스\' 등이 포함됩니다. \'파일 편집\'은 응용 프로그램의 기능으로, 운영체제의 기본 기능에는 포함되지 않습니다.', NULL, '다음 중 운영체제의 주요 기능이 아닌 것은?', '4', '프로세스 관리', '기억장치 관리', '사용자 인터페이스', '파일 편집', 'TYPE_CHOICE'),
('1', '데이터베이스의 무결성 제약 조건은 데이터를 정확하고 일관되게 유지하기 위한 약속입니다. \'개체 무결성\'은 기본 키의 중복을 허용하지 않음을 의미하며, \'도메인 무결성\'은 특정 열에 들어갈 값의 유형을 제한하는 것입니다. \'참조 무결성\'은 외래 키 제약으로 인한 참조의 일관성을 말합니다. \'사용자 무결성\'은 일반적인 데이터베이스 무결성 조건으로 인정되지 않습니다.', NULL, '다음 중 데이터베이스의 무결성 제약 조건에 포함되지 않는 것은?', '3', '개체 무결성', '도메인 무결성', '사용자 무결성', '참조 무결성', 'TYPE_CHOICE'),
('1', '네트워크 계층은 데이터를 패킷 형태로 전송하며 주요 프로토콜로는 \'IP\', \'ICMP\', \'ARP\' 등이 있습니다. \'TCP\'는 전송 계층 프로토콜로, 신뢰성 있는 데이터 전송을 보장합니다. 따라서 \'TCP\'는 네트워크 계층에서 사용되는 프로토콜은 아닙니다.', NULL, '다음 중 네트워크 계층에서 사용하는 프로토콜이 아닌 것은?', '2', 'IP', 'TCP', 'ICMP', 'ARP', 'TYPE_CHOICE'),
('1', '나선형 모델은 소프트웨어 개발에서 각 반복 주기마다 계획, 위험 분석, 개발, 시험을 수행하는 방식입니다. 특히, \'위험 분석\'이 핵심적인 부분으로, 각 단계에서 발생할 수 있는 위험을 평가하고 이를 관리하는 것이 주요 특징입니다. 이는 변화에 유연하게 대응하고, 불확실성을 효과적으로 관리할 수 있게 해줍니다.', NULL, '소프트웨어 개발 생명주기(SDLC) 모델 중에서 나선형 모델의 주요 특징은 무엇인가?', '2', '단계적 접근', '위험 분석', '상호작용', '획기적 개선', 'TYPE_CHOICE'),
('1', '정규화는 데이터베이스 디자인에서 데이터 중복을 최소화하고, 데이터 무결성을 보장하기 위한 과정입니다. 이는 데이터 모델의 단순화를 통해 데이터 일관성을 유지하도록 돕습니다. 하지만 \'모든 데이터 저장\'은 정규화의 목적이 아니며, 데이터 저장의 범위를 정의하는 것은 정규화와 구분되는 요소입니다.', NULL, '다음 중 정규화의 목적에 포함되지 않는 것은?', '4', '데이터 중복 최소화', '데이터 모델 단순화', '데이터 무결성 보장', '모든 데이터 저장', 'TYPE_CHOICE'),
('1', '컴파일러의 핵심 기능 중 하나는 소스 코드를 기계어로 번역하는 것이며, \'문법 분석\'과 \'코드 최적화\' 과정을 통해 효율적인 기계어 코드로 변환합니다. \'네트워크 연결\'은 컴파일러의 주요 기능과 직접적인 관련이 없으며, 주로 네트워크 프로토콜의 영역입니다.', NULL, '다음 중 컴파일러의 기능과 가장 관련이 적은 것은?', '4', '문법 분석', '코드 최적화', '기계어 번역', '네트워크 연결', 'TYPE_CHOICE'),
('1', '프로토콜은 통신을 규정하는 규칙의 모음으로, 주요 구성 요소에는 \'구문\', \'의미\', \'타이밍\'이 있습니다. 이 중 \'구문\'은 데이터 형식과 신호 수준을 정의하는 것을 말합니다. 규칙에 따라 데이터를 교환하여 효과적인 통신을 가능하게 합니다.', NULL, '프로토콜의 주요 구성 요소 중 하나로 일정한 형식을 가진 데이터 교환 규칙을 의미하는 것은?', '3', '문맥', '차단', '구문', '의미', 'TYPE_CHOICE'),
('1', '교착 상태는 시스템에서 자원 할당 상태가 해소되지 않을 때 발생합니다. 이를 위해 필요한 조건에는 \'상호 배제\', \'점유 및 대기\', \'비선점\', \'순환 대기\'가 있습니다. \'선점\'은 이미 할당된 자원을 다른 프로세스가 강제로 가져오는 것을 의미하며, 이는 교착 상태 조건에 포함되지 않습니다.', NULL, '운영체제에서 교착 상태(Deadlock)가 발생하기 위한 필요 조건에 포함되지 않는 것은?', '3', '상호 배제', '점유 및 대기', '선점', '순환 대기', 'TYPE_CHOICE'),
('1', '메모리 계층 구조에서 \'교체 정책\'은 사용되지 않거나 덜 사용되는 데이터를 보조기억장치로 옮기는 기준을 설정하는 데 사용됩니다. 이는 메모리를 효율적으로 사용하고 필요한 데이터를 빠르게 접근할 수 있도록 돕는 중요한 전략입니다. 특히 캐시와 주기억장치 사이에서 많이 활용됩니다.', NULL, '다음 중 주기억장치와 보조기억장치의 계층 구조에서 가장 흔히 사용되는 정책은?', '1', '교체 정책', '페이지 교환', '컨텍스트 교환', '버퍼링', 'TYPE_CHOICE'),
('1', 'DBMS의 주요 기능에는 데이터 저장, 회복, 보안, 무결성 등이 있습니다. 데이터 분석은 주로 비즈니스 인텔리전스(BI) 도구나 데이터 분석 소프트웨어의 역할에 해당합니다. 따라서 데이터 분석은 DBMS의 주요 기능과는 다소 다릅니다.', NULL, '데이터베이스 관리 시스템(DBMS)의 주요 기능 중 하나가 아닌 것은 무엇인가?', '3', '데이터 저장', '데이터 회복', '데이터 분석', '데이터 보안', 'TYPE_CHOICE'),
('1', '요구 사항 분석 단계에서는 고객의 요구와 기대를 명확히 이해하고 시스템에서 구현할 사항을 정의합니다. 이 단계는 시스템 분석가가 주로 담당하며, 고객과의 소통을 통해 요구 사항을 문서화합니다. 명확한 요구 사항이 있어야 시스템 설계 및 개발의 방향이 정해지므로 매우 중요한 단계입니다.', NULL, '소프트웨어 개발 생명주기(SDLC)에서 요구 사항 분석 단계를 주로 수행하는 역할은 누구인가?', '2', '개발자', '시스템 분석가', '테스터', '프로젝트 관리자', 'TYPE_CHOICE'),
('1', '가장 짧은 첫 번째 실행(SJF) 알고리즘은 프로세스의 실행 시간을 기준으로 스케줄링을 진행합니다. 이는 평균 대기 시간과 응답 시간을 최소화하는 장점이 있습니다. 하지만 실행 시간이 예측할 수 없는 경우도 많으며, 짧은 작업에 너무 치우쳐 긴 작업이 무한 대기 상태가 될 위험도 있어 효율적인 관리가 필요합니다.', NULL, '프로세스 스케줄링 알고리즘 중에서 가장 짧은 첫 번째 실행(SJF)의 장점은 무엇인가?', '2', '무한 대기 문제 방지', '응답 시간 최소화', 'CPU 이용률 최대화', '시스템 복잡도 증가', 'TYPE_CHOICE'),
('1', 'TCP는 신뢰성 있는 전송을 위해 설계된 프로토콜로 연결 지향성을 가지고, 데이터 전송 시 순서를 보장합니다. 또한 전송 중 손실된 패킷을 재전송하여 데이터의 무결성을 유지합니다. 반면 비연결성을 특징으로 하는 프로토콜은 사용자 데이터그램 프로토콜(UDP)입니다.', NULL, '컴퓨터 네트워크에서 전송 제어 프로토콜(TCP)의 주요 특성이 아닌 것은?', '4', '연결 지향성', '순서 제어', '패킷 손실 방지', '비연결성', 'TYPE_CHOICE'),
('1', '정규화는 데이터 모델을 보다 최적화하여 데이터 중복을 최소화하고 무결성을 유지하는 기법입니다. 이는 데이터의 일관성을 높이며, 수정 시 일관성 유지에 필요한 노력과 비용을 줄여줍니다. 반면, 정규화의 과도한 적용은 쿼리 처리 속도에 악영향을 미칠 수 있어 적절한 수준의 정규화가 중요합니다.', NULL, '데이터베이스 정규화의 주된 목적은 무엇인가?', '1', '데이터 중복 최소화', '쿼리 처리 속도 증가', '데이터베이스 크기 확대', '백업 주기 감소', 'TYPE_CHOICE'),
('1', '회귀 테스트는 새로운 코드 변경이나 업데이트 후 기존 기능이 제대로 작동하는지를 확인하는 테스트입니다. 이는 기존에 문제가 없던 부분에서 새로운 결함이 발생하지 않았는지를 검증하는데 중점을 둡니다. 따라서 주요 목적은 코드 변경 이후에도 시스템이 안정되게 작동하는지 확인하는 것입니다.', NULL, '소프트웨어 테스트 단계에서 회귀 테스트의 목적은 무엇인가?', '4', '사용자 요구사항 확인', '코드의 품질 보장', '새로운 결함 탐지', '기존 기능의 동작 확인', 'TYPE_CHOICE'),
('1', '컴파일러는 소스 코드를 기계어로 번역하고, 최적화 작업을 통해 성능을 개선하며, 문법 오류 검사를 합니다. 또한 컴파일 후 실행 가능한 파일을 생성합니다. 반면 동적 링크는 주로 실행 시간에 수행되는 작업으로, 이는 \'링커\'가 담당하는 것입니다.', NULL, '다음 중 \'컴파일러\'가 하는 작업이 아닌 것은 무엇인가?', '4', '소스 코드 최적화', '문법 오류 검사', '실행 파일 생성', '동적 링크 수행', 'TYPE_CHOICE'),
('1', '운영체제는 컴퓨터의 자원을 관리하고 하드웨어와 소프트웨어 간의 인터페이스를 제공하는 시스템 소프트웨어입니다. 주요 역할로는 프로세스 관리, 기억장치 관리, 파일 시스템 관리, 입출력 장치 관리, 그리고 네트워크 관리가 포함됩니다. 그러나 직접적인 응용 프로그램 작성은 운영체제의 역할이 아닙니다; 이는 개발자가 하는 일입니다.', NULL, '다음 중 운영체제의 역할에 해당하지 않는 것은 무엇인가?', '4', '프로세스 관리', '기억장치 관리', '네트워크 관리', '응용 프로그램 작성', 'TYPE_CHOICE'),
('1', '소프트웨어 개발 생명주기(SDLC)는 소프트웨어 개발 프로젝트를 시작부터 끝까지 관리하고 조직화하는 프로세스를 말합니다. 이 중 첫 번째 단계는 요구사항 분석으로, 프로젝트의 목적을 정의하고 필요한 기능 및 제약조건을 수집하고 분석하는 단계입니다. 이를 통해 명확한 목표와 일정이 설정되며, 향후 모든 개발에 대한 기준이 됩니다.', NULL, '소프트웨어 개발 생명주기(SDLC)의 단계 중 첫 번째 단계는 무엇인가?', '2', '구현', '요구사항 분석', '유지보수', '테스트', 'TYPE_CHOICE'),
('1', '캐시 메모리는 CPU와 주기억장치(RAM) 사이에 속도를 맞추기 위해 사용되는 고속 메모리입니다. 데이터 읽기와 쓰기 성능 향상은 \'지역성의 원리\'에 기반을 두고 있습니다. 지역성의 원리는 시간 지역성과 공간 지역성으로 나뉘며, 프로세스가 사용한 데이터를 다시 사용할 가능성이 높거나 인접한 데이터를 사용할 가능성이 높은 경우로 정의됩니다. 이를 통해 자주 사용하는 데이터를 캐시에 저장하고, CPU가 더 빠르게 접근할 수 있도록 합니다.', NULL, '기억장치 계층 구조에서 캐시와 주기억장치 간의 데이터 읽기, 쓰기 속도가 향상되는 원리는 무엇인가?', '1', '지역성의 원리', '비용 최적화 원리', '버퍼링 원리', '병렬 처리 원리', 'TYPE_CHOICE'),
('2', '패킷은 컴퓨터 네트워크에서 데이터를 전송할 때 사용되는 가장 작은 단위입니다. 데이터를 전송하기 위해 큰 데이터를 더 작은 패킷으로 나누어 전송하며, 이로 인해 네트워크 효율성을 높일 수 있습니다. 패킷에는 일련의 데이터 뿐만 아니라 출발지, 목적지 정보와 오류 검출 코드 등이 포함되어 있어 안전한 전송을 보장합니다.', NULL, '컴퓨터 네트워크에서 데이터를 가장 작은 단위로 나누어 전송하는 단위는 무엇인가?', '패킷', NULL, NULL, NULL, NULL, 'TYPE_SHORT'),
('2', '화이트박스 테스트는 프로그램의 내부 구조, 즉 코드 로직을 기반으로 하여 테스트를 수행하는 기법입니다. 개발자가 소스 코드를 이해하고 직접 검사하기 때문에 코드의 모든 경로를 검사할 수 있어 높은 결함 탐지율을 갖습니다. 그러나 코드에 대한 깊은 이해가 필요하기 때문에 수행자에게 높은 기술력을 요구합니다.', NULL, '소프트웨어 테스트에서 프로그램의 논리적 경로를 따라가면서 철저히 검사하는 기법은 무엇인가?', '화이트박스 테스트', NULL, NULL, NULL, NULL, 'TYPE_SHORT'),
('2', '애자일 개발 모델은 반복적이고 점진적인 개발 접근 방식을 통해 요구사항의 변화에 유연하게 대처하는 방법론입니다. 고객의 피드백을 중심으로 개발을 진행하기 때문에 프로젝트 진행 중에 발생할 수 있는 요구사항 변경에 즉각적으로 대응할 수 있습니다. 이 방법은 고정된 요구사항에 따라 진행되는 폭포수 모델과 달리 각 단계에서 변화와 적응이 수용되는 특성을 가집니다.', NULL, '소프트웨어 개발 모델 중 하나로, 요구사항 변경이 자주 일어나는 프로젝트에 적합한 것은 무엇인가?', '애자일(Agile)', NULL, NULL, NULL, NULL, 'TYPE_SHORT'),
('2', '데이터베이스에서 무결성을 유지하기 위해서는 여러 제약 조건이 필요합니다. 고유성은 각 레코드의 식별자가 중복되지 않도록 보장합니다. 참조 무결성은 외래 키 관계를 통해 데이터의 일관성을 유지하게 합니다. 도메인 무결성은 특정 컬럼에 입력될 수 있는 값의 범위와 형식을 제한하여 데이터의 유효성을 보장합니다. 이러한 기본적인 제약 조건들은 데이터의 정확성과 신뢰성을 높이는 데 핵심적인 역할을 합니다.', NULL, '데이터베이스에서 무결성을 보장하기 위한 기본적인 제약 조건 세 가지는 무엇인가?', '고유성, 참조 무결성, 도메인 무결성', NULL, NULL, NULL, NULL, 'TYPE_SHORT'),
('2', 'LRU(Least Recently Used) 페이지 교체 알고리즘은 가장 오래 전에 사용된 페이지를 교체하는 방식으로, 페이지 교체의 효율성을 높이는 방법 중 하나입니다. 이 방식은 최근에 사용된 페이지는 앞으로도 사용될 가능성이 높다는 지역적 특성을 활용합니다. 하지만 실질적으로 최근 사용 내역을 유지하고 관리하기 위한 추가적인 메모리 및 계산 비용이 발생할 수 있습니다.', NULL, '운영체제에서 페이지 교체 알고리즘 중 가장 최근에 사용되지 않은 페이지를 교체하는 방식은 무엇인가?', 'LRU (Least Recently Used)', NULL, NULL, NULL, NULL, 'TYPE_SHORT'),
('2', '소프트웨어 개발 생명주기(SDLC)는 소프트웨어 개발 프로세스를 체계적으로 관리하기 위한 방법론입니다. 주요 단계로는 요구 사항 분석, 설계, 코딩, 테스트, 배포, 유지보수가 있습니다. 데이터베이스 관리는 일반적인 소프트웨어 개발 단계가 아니라, 개발 과정에서 사용될 수 있는 기술 중 하나입니다.', NULL, '다음 중 소프트웨어 개발 생명주기(SDLC)의 단계와 거리가 먼 것은 무엇인가?', '4', '요구 사항 분석', '설계', '코딩', '데이터베이스 관리', 'TYPE_CHOICE'),
('2', '정규화는 데이터베이스 설계 시 데이터의 중복을 최소화하고, 데이터의 무결성과 일관성을 유지하기 위해 사용되는 방법론입니다. 정규화를 통해 데이터를 여러 테이블로 분리하여 중복 데이터를 제거하고, 변화에 유연하게 대응할 수 있는 데이터 모델을 구성합니다. 이에 따라, 질의 효율성을 높이고 무결성을 증가시킵니다.', NULL, '데이터베이스의 정규화(normalization)의 주된 목적은 무엇인가?', '1', '데이터 중복 최소화', '데이터베이스 크기 최대화', '질의 속도 저하', '데이터베이스 무결성 감소', 'TYPE_CHOICE'),
('2', '교착상태는 두 개 이상의 프로세스가 자원을 서로 기다리며 영원히 진행되지 못하는 상태를 말합니다. 해결 방법에는 자원의 상호 배제와 순환 대기를 방지하는 예방, 시스템의 상태를 줄곧 모니터링하는 회피, 교착 상태 발생 시 해결하는 탐지 및 복구가 있습니다. \'자원 무한 증대\'는 현실적이지 않으며 문제 해결과는 관련이 없습니다.', NULL, '교착상태(Deadlock)를 해결하기 위한 기법으로 적절하지 않은 것은 무엇인가?', '3', '회피', '탐지 및 복구', '자원 무한 증대', '예방', 'TYPE_CHOICE'),
('2', 'OSI 7계층 모델은 네트워크 통신을 단계별로 나눈 국제 표준 모델입니다. 전송 계층은 데이터의 정확한 전송을 연결 계층과 네트워크 계층 간에 중재하며, 주요 프로토콜로는 TCP와 UDP가 있습니다. HTTP는 애플리케이션 계층에, Ethernet은 데이터 링크 계층에, 그리고 IP는 네트워크 계층에 속합니다.', NULL, 'OSI 7계층 모델에서 전송 계층에 해당하는 프로토콜은 무엇인가?', '2', 'HTTP', 'TCP', 'Ethernet', 'IP', 'TYPE_CHOICE'),
('2', '컴파일러는 고급 프로그래밍 언어의 소스 코드를 기계어로 변환하는 프로그램입니다. 코드 최적화 및 구문 분석을 통해 최적화된 기계어 코드를 생성하며, 코드 내의 오류를 찾아 보고합니다. 다만, 컴파일러 자체는 프로그램을 직접 실행하지 않으며, 실행은 주로 인터프리터가 담당하는 역할입니다.', NULL, '컴파일러의 역할과 가장 거리가 먼 작업은 무엇인가?', '3', '코드 최적화', '구문 분석', '프로그램의 직접 실행', '오류 보고', 'TYPE_CHOICE'),
('2', 'UDP(User Datagram Protocol)는 비연결형 프로토콜로서, 데이터그램을 독립적으로 전송합니다. 이로 인해 연결 설정 과정이 없고, 수신 측에서 수신 확인을 하지 않기 때문에 전송 속도가 빠르지만 신뢰성이 낮습니다. 반면, TCP는 연결 지향형 프로토콜로, 신뢰성 있는 데이터 전송을 보장합니다.', NULL, 'UDP는 연결 지향 프로토콜이다.', 'X', NULL, NULL, NULL, NULL, 'TYPE_OX'),
('2', '트랜잭션의 원자성(Atomicity)은 데이터베이스 시스템에서 트랜잭션의 모든 연산이 전부 수행되거나 전혀 수행되지 않는 것을 보장합니다. 이는 트랜잭션의 부분 수행 시 중단되는 경우 데이터베이스가 불완전하거나 일관성 없는 상태가 되는 것을 방지합니다. 따라서 실패 시점에 있던 모든 연산을 철회하여 처음 상태로 돌려놓습니다.', NULL, '트랜잭션의 원자성은 모든 연산이 완료되거나 아예 실행되지 않아야 함을 보장한다.', 'O', NULL, NULL, NULL, NULL, 'TYPE_OX'),
('2', 'HTTP 상태 코드 404는 클라이언트 요청이 본래의 경로로 서버에 도달했지만, 요청한 리소스를 서버에서 찾을 수 없음을 나타냅니다. 이는 일반적으로 사용자가 잘못된 URL을 입력했거나 리소스가 삭제된 경우에 발생합니다. 이러한 상태 코드는 사용자에게 페이지가 존재하지 않음을 알리는 데 사용됩니다.', NULL, 'HTTP 상태 코드 404는 서버가 요청을 이해했으나 리소스를 찾지 못했음을 의미한다.', 'O', NULL, NULL, NULL, NULL, 'TYPE_OX'),
('2', '운영 체제는 컴퓨터 하드웨어와 사용자가 실행하는 다양한 프로그램 사이의 중재자 역할을 합니다. 하드웨어 자원 관리를 통해 실행 중인 프로그램의 효율적인 운영을 돕습니다. 사용자는 운영 체제를 통해 하드웨어와 상호작용하며, 이는 사용자에게 보다 편리한 컴퓨팅 환경을 제공합니다.', NULL, '운영 체제는 하드웨어의 관리를 위한 소프트웨어적 인터페이스이다.', 'O', NULL, NULL, NULL, NULL, 'TYPE_OX'),
('2', 'Round Robin CPU 스케줄링 방식은 각 프로세스에 동일한 시간 할당을 제공합니다. 프로세스가 자신의 할당 시간을 소진하면, 대기열의 끝으로 이동하여 다른 프로세스가 CPU 시간을 사용할 수 있도록 합니다. 이 방식은 시간 공유 시스템에 효과적이며, 모든 프로세스에 대해 공평한 CPU 시간 배분을 보장합니다.', NULL, 'CPU 스케줄링에서 Round Robin 방식은 프로세스가 할당된 시간이 끝나면 대기열의 마지막으로 이동한다.', 'O', NULL, NULL, NULL, NULL, 'TYPE_OX');
